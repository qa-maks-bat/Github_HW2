QA Course by Vadim Ksendzov 
	 
Group_30_QA

GITHUB HOMEWORK 2
	 
Invironment: Windows 10, Notepad++


Telegram: @maks_tbat 

Name: Maksim Batrakou
	 
Location: Minsk, Belarus


#!/bin/bash
	 
1. На локальном репозитории сделать ветки для:
- Postman
- Jmeter
- CheckLists
- Bag Reports
- SQL
- Charles
- Mobile testing:

GITHUB (remote): 
-> Sign in your account on Github;
-> Click "+" at the top right;
-> Select "New repository" from the dropdown menu;
-> Fill in "Repository name" and "Description" (optional);
-> Check the box next to "Add a README file";
-> Click "Create repository";
-> Enter the created repository and copy the web URL (click "CODE" or copy from the browser address bar);
-> Go to GitBash (Terminal):

$ git clone https://github.com/qa-maks-bat/Github_HW2.git
$ git branch Postman ; git branch Jmeter ; git branch CheckLists ; git branch Bug_Reports ; git branch SQL ; git branch Charles ; git branch Mobile_testing ; $ git branch

2. Запушить все ветки на внешний репозиторий:
	
$ git push -u origin Postman Jmeter CheckLists Bug_Reports SQL Charles Mobile_testing ; git branch -a

3. В ветке Bug Reports сделать текстовый документ со структурой баг репорта:

$ git checkout Bug_Reports ; git branch
$ echo "QA Course by Vadim Ksendzov
Group_30_QA

GIT homework 2
Environment: Windows 10, Notepad++

Telegram: @maks_tbat
Location: Minsk, Belarus


BUG_REPORT STRUCTURE:

Summary: Briefly describe the problem, clearly stating the cause and type of error situation.

Project: Write the name of the project being tested.

Component: Indicate the name of the part or function of the project under test.

Version: Specify the version in which the error was found.

Severity: Point out the criticality of the bug: S1 Blocker, S2 Critical, S3 Major, S4 Minor, or S5 Trivial.

Priority: Point out the bug priority: P1 High, P2 Medium, or P3 Low.

Status: Specify the bug status. Depending on the procedure used and the life cycle of the bug: New, Opened, Postponed, Rejected, Duplicate, Assigned, Fixed, Verified, Reopened, or Closed.

Author: Fill in the contact details of the bug reporter

Assigned to: Write the name of the person assigned to resolve the issue.

Discription:
1. Environment: Describe the environment in which the bug was found: operating system, service pack, browser name and version, chip software version, library version, etc.
2. Precondition: Indicate what you need to do to prepare for the project testing.
3. Steps to reproduce (STR): Write down steps to easily reproduce the situation that caused the error.
4. Actual Result (AR): Describe the actual result.
5. Expected Result (ER): Note the expected result. You can add a link to the specification.

Attachment: Paste a link to a log file, a screenshot, or any other document that can help clarify the cause of the error or indicate a way to solve the problem." > bug_report.txt ; cat bug_report.txt

4. Запушить структуру багрепорта на внешний репозиторий:

$ git add bug_report.txt
$ git commit -m "Created a new file with the bug report structure: bug_report.txt"
$ git push

5. Вмержить ветку Bag Reports в Main:

$ git switch main
$ git merge Bug_Reports -m "Merging from the Bug_Reports branch into the Main branch"

6. Запушить main на внешний репозиторий:

$ git push

7. В ветке CheckLists набросать структуру чек листа:

$ git switch CheckLists
$ git branch
$ echo "QA Course by Vadim Ksendzov
Group_30_QA

GIT homework 2
Environment: Windows 10, Notepad++

Telegram: @maks_tbat
Location: Minsk, Belarus


CHECKLIST STRUCTURE:

1. Description: Briefly describe the type of test, for example \"Functional testing checklist\".

2. The name of the first column of the table is \"Check\" and this column should contain a list of checks, for example:
\"2.1. The site is open and available.
2.2. When you try to reopen the site, it opens and is available.
2.3. All buttons on the site are clickable.
2.4. All links on the site open.
2.5. There are no broken links on the site.
2.6. Check all forms on the site.
2.7. Check the validation of all required fields.
2.8. All required fields have an asterisk.
2.9. Check validation for all optional fields.
2.10. Check the main elements of the site.
2.11. Check the operation of the menu.
2.12. Check that the downloaded documents open correctly.
2.13. Sending forms works correctly.
2.14. Check what happens if you delete cookies while on the site.
2.15. Check what happens if you delete cookies after visiting the site.
2.16. All data in the lists in chronological order.\".

3. The name of the second column of the table is \"Result\". This column can only contain the status \"Passed\" or \"Failed\".

4. The name of the third column of the table is \"Comments\". If the check status is \"Failed\", you should leave a comment about the bug that has occurred.

5. The name of the forth column of the table is \"Attachment\". If the check status is \"Failed\", you should insert a link to a screenshot, or any other documents that can help clarify the issue." > checklist.txt ; cat checklist.txt

8. Запушить структуру на внешний репозиторий:

$ git add checklist.txt
$ git commit -m "Created a new file with the checklist structure: checklist.txt"
$ git push

9. На внешнем репозитории сделать Pull Request ветки CheckLists в main:

GITHUB (remote): 
-> Sign in your account on Github as needed;
-> Click the icon of your account at the top left;
-> Select "Your repositories" from the dropdown menu;
-> Choose the "Github_HW2" repository;
-> Click "Compare & pull request";
-> Leave a comment "Merging from the CheckLists branch into the Main branch" and click "Create pull requst";
-> Click "Merge pull request and then "Confirm merge";
-> Go to GitBash (Terminal)

10. Синхронизировать Внешнюю и Локальную ветки Main:

$ git switch main ; git fetch
$ git pull

END

==============================